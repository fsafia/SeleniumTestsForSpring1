package ru.geekbrains.safia.web.mvc.app;// Generated by Selenium IDE
import org.junit.Assert;
import org.junit.Test;
import org.junit.Before;
import org.junit.After;

import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import java.util.*;

public class PoductAllActionsPositiveTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    System.setProperty("webdriver.gecko.driver", "/home/safia/courses/Nail/geckodriver-v0.28.0-linux64/geckodriver");
    driver = new FirefoxDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void allActionsPositiveTest() {
    driver.get("http://localhost:8080/mvc-app/login");
    driver.manage().window().setSize(new Dimension(1000, 1500));
    login();
    chekWelcomePage();
    driver.findElement(By.linkText("Products")).click();
    checkPageProducts();
    //присутствует таблица заполненная продуктами
    int rowCount=driver.findElements(By.xpath("//table[@class=\'table table-bordered my-2\']/tbody/tr")).size();
    Assert.assertTrue(rowCount != 0);
    filteringByTitle("dumbbells");
    int rowCountWithNewElement=driver.findElements(By.xpath("//table[@class=\'table table-bordered my-2\']/tbody/tr")).size();
    Assert.assertTrue(rowCountWithNewElement == 0);

    driver.findElement(By.linkText("Add Product")).click();
    checkPageProduct();
    driver.findElement(By.id("title")).click();
    driver.findElement(By.id("title")).sendKeys("dumbbells");
    driver.findElement(By.id("cost")).click();
    driver.findElement(By.id("cost")).sendKeys("100");
    driver.findElement(By.id("cost")).sendKeys(Keys.ENTER);
    //можно опять проверить что перешли на страничку Products
    checkPageProducts();
    filteringByTitle("dumbbells");
    rowCountWithNewElement=driver.findElements(By.xpath("//table[@class=\'table table-bordered my-2\']/tbody/tr")).size();
    Assert.assertTrue(rowCountWithNewElement == 1);

    driver.findElement(By.cssSelector(".far")).click();
    filteringByTitle("dumbbells");
    rowCountWithNewElement=driver.findElements(By.xpath("//table[@class=\'table table-bordered my-2\']/tbody/tr")).size();
    Assert.assertTrue(rowCountWithNewElement == 0);
    //driver.findElement(By.cssSelector(".navbar-toggler-icon")).click();//нужно если ширина экрана 500, не нужно если 1000

    logout();
    checkLogoutSuccess();
  }

  private void checkLogoutSuccess() {
    WebElement webElementAlertSignOutSuccessfully = driver.findElement(By.cssSelector(".alert-success"));
    Assert.assertEquals("You have been signed out", webElementAlertSignOutSuccessfully.getText());
  }

  private void login() {
    driver.findElement(By.id("username")).sendKeys("fsafia");
    driver.findElement(By.id("password")).click();
    driver.findElement(By.id("password")).sendKeys("fsafia");
    driver.findElement(By.cssSelector(".btn")).click();
  }

  private void logout() {
    driver.findElement(By.cssSelector(".btn-outline-success")).click();

  }

  private void checkPageProduct() {
    WebElement webElementTitle = driver.findElement(By.xpath("//label[contains(text(),'Title')]"));
    Assert.assertEquals("Title", webElementTitle.getText());

    WebElement webElementInputTitle = driver.findElement(By.name("title"));
    String enterTitle=webElementInputTitle.getAttribute("placeholder");
    Assert.assertEquals("Enter title", enterTitle);
  }

  private void filteringByTitle(String productTitle) {
    driver.findElement(By.id("title")).click();
    driver.findElement(By.id("title")).sendKeys(productTitle);
    driver.findElement(By.cssSelector(".btn:nth-child(7)")).click();
  }

  private void checkPageProducts() {
    WebElement webElementFindById = driver.findElement(By.xpath("//label[contains(text(),'Find product by id:')]"));
    Assert.assertEquals("Find product by id:", webElementFindById.getText());

    WebElement webElementInputId = driver.findElement(By.name("id"));
    String text=webElementInputId.getAttribute("placeholder");
    Assert.assertEquals("Enter id", webElementInputId.getAttribute("placeholder"));

    WebElement webElementFind = driver.findElement(By.xpath("//button[contains(text(),'Find')]"));
    Assert.assertEquals("Find", webElementFind.getText());

    WebElement webElementAddProduct = driver.findElement(By.linkText("Add Product"));
    Assert.assertEquals("Add Product", webElementAddProduct.getText());
  }

  private void chekWelcomePage() {
    WebElement webElementWelkome = driver.findElement(By.cssSelector("p[id='welcome']"));
    Assert.assertEquals("Welcome", webElementWelkome.getText());

    WebElement webElementProducts = driver.findElement(By.linkText("Products"));
    Assert.assertEquals("Products", webElementProducts.getText());

    WebElement webElementUsers = driver.findElement(By.linkText("Users"));
    Assert.assertEquals("Users", webElementUsers.getText());
  }
}
